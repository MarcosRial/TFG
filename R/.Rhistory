type = "h", col = "grey",          ## tipo de línea y color
##main = "Índice de Acuerdo Espectral",                      ## título
sub = NULL,                                  ## subtítulo
lty = 1, lwd = 1,                            ## tipo y grosor de línea
xlab = expression (paste (lambda, " (nm)")), ## etiquetado de los ejes
ylab = "CB",
xlim = c(325,1100), ylim = c(0,1)            ## límites de los ejes
)
return(Indice)
}
IAE(RhizophoraCorte,LagunculariaCorte)
IAE(AvicenniaCorte,LagunculariaCorte)
IAE <- function(i, j) {
mediai = mean(i$V5)
CBi = sapply(i$V5, FUN=function(x) {if(x>=mediai) {1} else {0}})
mediaj = mean(j$V5)
CBj = sapply(j$V5, FUN=function(x) {if(x>=mediaj) {1} else {0}})
Indice = sum((CBi-CBj)^2)/length(CBi)
plot (CBi~i$V4,
type = "h", col = "grey",          ## tipo de línea y color
##main = "Índice de Acuerdo Espectral",                      ## título
sub = NULL,                                  ## subtítulo
lty = 1, lwd = 1,                            ## tipo y grosor de línea
xlab = expression (paste (lambda, " (nm)")), ## etiquetado de los ejes
ylab = "CB",
xlim = c(420,900), ylim = c(0,1)            ## límites de los ejes
)
return(Indice)
}
IAE(AvicenniaCorte,LagunculariaCorte)
IAE(AvicenniaCorte,RhizophoraCorte)
View(RhizophoraCorte)
View(LagunculariaCorte)
View(AvicenniaCorte)
png (filename = "./Graficos/IAE_RM.png",
width = 15, height = 9, units = "cm", res = 300,)
IAE(RhizophoraCorte)
IAE(RhizophoraCorte, LagunculariaCorte)
dev.off()
png (filename = "./Graficos/IAE_LR.png",
width = 15, height = 9, units = "cm", res = 300,)
IAE(LagunculariaCorte,AvicenniaCorte)
dev.off()
png (filename = "./Graficos/IAE_AG.png",
width = 15, height = 9, units = "cm", res = 300,)
IAE(AvicenniaCorte, RhizophoraCorte)
dev.off()
AE(RhizophoraCorte,AvicenniaCorte)
AE(LagunculariaCorte,AvicenniaCorte)
AE(LagunculariaCorte,RhizophoraCorte)
AE(RhizophoraCorte,LagunculariaCorte)
library("prospectr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
?continuumRemoval
View(Rhizophora)
matplot(bandas, t(matriz), type="l", ylim=c(0,1))
matlines(bandas, t(cr2))
legend(800, 0.4,)
legend(800, 0.4, legend)
legend (x = 750, y = 0.8,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1),
col=c("red","green","blue"), bty="n")
legend (x = 750, y = 0.4,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1),
col=c("red","green","blue"), bty="n")
legend (x = 750, y = 0.5,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
matplot(bandas, t(matriz), type="l", ylim=c(0,1))
matlines(bandas, t(cr2))
legend (x = 750, y = 0.5,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
matplot(bandas, t(matriz), col=c("red","green","blue"), type="l", ylim=c(0,1))
matlines(bandas, t(cr2))
legend (x = 750, y = 0.5,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
matriz <- matrix(c(mangle1corte$V5,mangle2corte$V5,mangle3corte$V5),
byrow=TRUE,
nrow=3,
ncol=481)
bandas <- mangle1corte$V4
cr2 <- continuumRemoval(matriz, bandas)
matplot(bandas, t(matriz), col=c("red","green","blue"), type="l", ylim=c(0,1))
matlines(bandas, t(cr2), col=c("red","green","blue"))
library("prospectr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
matplot(bandas, t(matriz), col=c("red","green","blue"), type="l", ylim=c(0,1))
matlines(bandas, t(cr2), col=c("red","green","blue"))
legend (x = 750, y = 0.5,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
matplot(bandas, t(matriz), col=c("grey","grey","grey"), type="l", ylim=c(0,1))
matlines(bandas, t(cr2), col=c("red","green","blue"))
legend (x = 750, y = 0.5,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
png (filename = "./Graficos/gráficanueva.png",
width = 15, height = 10, units = "cm", res = 300,)
matplot(bandas, t(matriz), col=c("grey","grey","grey"), type="l", ylim=c(0,1))
matlines(bandas, t(cr2), col=c("red","green","blue"))
legend (x = 750, y = 0.5,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
dev.off()
png (filename = "./Graficos/gráficanueva.png",
width = 16, height = 10, units = "cm", res = 300,)
matplot(bandas, t(matriz), col=c("grey","grey","grey"), type="l", ylim=c(0,1))
matlines(bandas, t(cr2), col=c("red","green","blue"))
legend (x = 750, y = 0.5,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
dev.off()
matplot(bandas, t(matriz),
col=c("grey","grey","grey"),
type="l",
xlab = expression (paste (lambda, " (nm)")),
ylim=c(0,1))
matlines(bandas, t(cr2),
col=c("red","green","blue"))
legend (x = 750, y = 0.5,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
matplot(bandas, t(matriz),
col=c("grey","grey","grey"),
type="l",
xlab = expression (paste (lambda, " (nm)")),
ylab = ,
ylim=c(0,1))
matlines(bandas, t(cr2),
col=c("red","green","blue"))
legend (x = 750, y = 0.5,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
matplot(bandas, t(matriz),
col=c("grey","grey","grey"),
type="l",
xlab = expression (paste (lambda, " (nm)")),
ylab = " ",
ylim=c(0,1))
matlines(bandas, t(cr2),
col=c("red","green","blue"))
legend (x = 750, y = 0.5,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
png (filename = "./Graficos/gráficanueva.png",
width = 16, height = 10, units = "cm", res = 300,)
matplot(bandas, t(matriz),
col=c("grey","grey","grey"),
type="l",
xlab = expression (paste (lambda, " (nm)")),
ylab = " ",
ylim=c(0,1))
matlines(bandas, t(cr2),
col=c("red","green","blue"))
legend (x = 750, y = 0.5,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
dev.off()
install.packages("raster")
library("raster", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
?raster
dir()
install.packages("swirl")
swirl()
library("swirl")
install.packages("testthat")
install.packages("swirl")
install.packages("RCurl")
install.packages("prospectr")
install.packages("swirl")
library("swirl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
detach("package:swirl", unload=TRUE)
install.packages("manipulate")
is.na(cr2)
View(RhizophoraCorte)
mean(Rhizo)
mean(RhizophoraCorte$V5[11:31])
mean(LagunculariaCorte$V5[11:31])
mean(AvicenniaCorte$V5[11:31])
mean(RhizophoraCorte$V5[32:91])
mean(LagunculariaCorte$V5[32:91])
mean(AvicenniaCorte$V5[32:91])
mean(RhizophoraCorte$V5[111:171])
mean(LagunculariaCorte$V5[111:171])
mean(AvicenniaCorte$V5[111:171])
mean(RhizophoraCorte$V5[221:251])
mean(LagunculariaCorte$V5[221:251])
mean(AvicenniaCorte$V5[221:251])
mean(RhizophoraCorte$V5[431:461])
mean(LagunculariaCorte$V5[431:461])
mean(AvicenniaCorte$V5[431:461])
grafica <- function(x) {
plot (x$V5~x$V4,                                   ## selección de x e y
type = "l", col = colores3,          ## tipo de línea y color
#main = "Reflectividad",                      ## título
sub = NULL,                                  ## subtítulo
lty = c(1:3), lwd = 1,                            ## tipo y grosor de línea
xlab = expression (paste (lambda, " (nm)")), ## etiquetado de los ejes
ylab = expression (rho),
xlim = c(400,950), ylim = c(0,1.1)            ## límites de los ejes
)
abline (h = seq(0,1,0.2),
v = c("430","450","510","530","590","640","670","850","880"),   ## colocación de líneas de guía en los límites de bandas Landsat
lty=1, col="grey")
text(440,0.9, "C",
cex = 0.8)
text(480,0.9, "B",
cex = 0.8)
text(560,0.9, "G",
cex = 0.8)
text(655,0.9, "R",
cex = 0.8)
text(865,0.9, "IRC",
cex = 0.8)
}
grafica(RhizophoraCorte)
lines(LagunculariaCorte$V4,LagunculariaCorte$V5, type="l", col="green", lty=2,lwd=1)
lines(AvicenniaCorte$V4,AvicenniaCorte$V5, type="l", col="blue", lty=3,lwd=1)
legend (x = 750, y = 0.8,
legend=c("Rhizophora", "Laguncularia", "Avicennia"), lty=c(1),
col=c("red","green","blue"), bty="n")
legend (x = 750, y = 0.5,
legend=c("R. mangle", "L. racemosa", "A. germinans"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
source('~/TrabajoFinGrado/R/Scripts/GraficaRM.R', echo=TRUE)
png (filename = "./Graficos/gráficanueva.png",
width = 15, height = 9, units = "cm", res = 300,)
grafica(RhizophoraCorte)
lines(LagunculariaCorte$V4,LagunculariaCorte$V5, type="l", col="green", lty=2,lwd=1)
lines(AvicenniaCorte$V4,AvicenniaCorte$V5, type="l", col="blue", lty=3,lwd=1)
legend (x = 750, y = 0.5,
legend=c("R. mangle", "L. racemosa", "A. germinans"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
dev.off()
png (filename = "./Graficos/gráficanueva.png",
width = 15, height = 9, units = "cm", res = 300,)
grafica(Rhizophora)
lines(Laguncularia$V4,Laguncularia$V5, type="l", col="green", lty=2,lwd=1)
lines(Avicennia$V4,Avicennia$V5, type="l", col="blue", lty=3,lwd=1)
legend (x = 750, y = 0.5,
legend=c("R. mangle", "L. racemosa", "A. germinans"), lty=c(1,2,3),
col=c("red","green","blue"), bty="n")
dev.off()
barplot(Pericos, main="Pericos",
col="blue",
ylim=c(0,0.3),
names.arg = c("1","2","3","4","5"),
xlab="Banda",
ylab="Reflectividad",
)
View(datos)
View(matriz)
View(puntos)
View(datos)
barplot(as.matrix(datos),
main="Prueba",
beside=TRUE,
col = c("red","green","blue","yellow","brown"),
xlab="Zona"
)
?read.csv
puntos2 <- read.csv("./Datos//puntos_comprob.csv")
View(puntos2)
barplot(puntos2[1])
puntos[1]
puntos[:1]
puntos[[:1]]
puntos[[1]]
puntos2[1,]
puntos2[1,4:5]
puntos2[1,4:7]
puntos2[1,4:8]
barplot(puntos2[1,4:8])
barplot(c(puntos2[1,4:8]))
plot(c(puntos2[1,4:8]))
plot(bandas, c(puntos2[1,4:8]))
?contour
contour(c(puntos2[1,4:8]))
?hist
?plot
plot(1:5, 2:6)
plot(1:5, c(puntos2[1:4:8]))
plot(1:5, c(puntos2[1,4:8]))
plot(1:5, c(puntos2[1,4:8]), type="l")
plot(1:5, c(puntos2[1,4:8]), type="o")
plot(1:5, c(puntos[1,4:8]),
type = "o",
col = "red"
xlab = "Bandas Landsat",
ylab = expression (paste (lambda, " (nm)"))
)
plot(1:5, c(puntos[1,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (paste (lambda, " (nm)"))
)
plot(1:5, c(puntos[1,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (rho)
)
plot(1:5, c(puntos2[1,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (rho)
)
abline (h = seq(0,3000,1000)
)
abline (h = seq(0,3000,1000),
lty=1, col="grey")
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (rho)
)
abline (h = seq(0,3000,1000),
lty=1, col="grey")
}
punto(2)
punto(3)
punto(4)
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (rho),
ylim = c(0,4000)
)
abline (h = seq(0,3000,1000),
lty=1, col="grey")
}
punto(1)
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (rho),
ylim = c(0,4000)
)
abline (h = seq(0,4000,1000),
lty=1, col="grey")
}
punto(1)
png (filename = "./Graficos/Punto1.png",
width = 15, height = 9, units = "cm", res = 300,)
punto(1)
dev.off()
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = "expression (rho) * 1000",
ylim = c(0,4000)
)
abline (h = seq(0,4000,1000),
lty=1, col="grey")
}
punto(1)
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (rho) * "1000",
ylim = c(0,4000)
)
abline (h = seq(0,4000,1000),
lty=1, col="grey")
}
punto(1)
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (rho) " * 1000",
ylim = c(0,4000)
)
abline (h = seq(0,4000,1000),
lty=1, col="grey")
}
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = c(expression (rho), " * 1000"),
ylim = c(0,4000)
)
abline (h = seq(0,4000,1000),
lty=1, col="grey")
}
punto(1)
punto(1)
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (rho), " * 1000",
ylim = c(0,4000)
)
abline (h = seq(0,4000,1000),
lty=1, col="grey")
}
punto(1)
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (rho) " * 1000",
ylim = c(0,4000)
)
abline (h = seq(0,4000,1000),
lty=1, col="grey")
}
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = list(expression (rho), " * 1000"),
ylim = c(0,4000)
)
abline (h = seq(0,4000,1000),
lty=1, col="grey")
}
punto(1)
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (rho),
ylim = c(0,4000)
)
abline (h = seq(0,4000,1000),
lty=1, col="grey")
}
png (filename = "./Graficos/Punto2.png",
width = 15, height = 9, units = "cm", res = 300,)
punto(2)
dev.off()
png (filename = "./Graficos/Punto3.png",
width = 15, height = 9, units = "cm", res = 300,)
punto(3)
dev.off()
png (filename = "./Graficos/Punto4.png",
width = 15, height = 9, units = "cm", res = 300,)
punto(4)
dev.off()
png (filename = "./Graficos/Punto5.png",
width = 15, height = 9, units = "cm", res = 300,)
punto(5)
dev.off()
png (filename = "./Graficos/Punto6.png",
width = 15, height = 9, units = "cm", res = 300,)
punto(6)
dev.off()
png (filename = "./Graficos/Punto7.png",
width = 15, height = 9, units = "cm", res = 300,)
punto(7)
dev.off()
png (filename = "./Graficos/Punto8.png",
width = 15, height = 9, units = "cm", res = 300,)
punto(8)
dev.off()
png (filename = "./Graficos/Punto9.png",
width = 15, height = 9, units = "cm", res = 300,)
punto(9)
dev.off()
png (filename = "./Graficos/Punto10.png",
width = 15, height = 9, units = "cm", res = 300,)
punto(10)
dev.off()
?legend
legend(x = 2, y = 2000, legend = n)
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (rho),
ylim = c(0,4000)
)
abline (h = seq(0,4000,1000),
lty=1, col="grey")
legend(x = 2, y = 2000, legend = n)
}
punto(1)
punto <- function(n){
plot(1:5, c(puntos2[n,4:8]),
type = "o",
col = "red",
xlab = "Bandas Landsat",
ylab = expression (rho),
ylim = c(0,4000)
)
abline (h = seq(0,4000,1000),
lty=1, col="grey")
legend(x = 2, y = 2000, legend = c("punto ", n), bty="n")
}
punto(1)
